name: release

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag and release to create. Must be in format "vX.Y.Z"'
        required: true

env:
  GITHUB_ENV: ".env"
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check tag
        run: |
          if [[ ! ${{ github.events.inputs.tag }} =~ "v[0-9]+\.[0-9]+\.[0-9]+" ]]; then
            echo "Bad value supplied for version tag"
            exit 1
          fi
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Install go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: 'go.mod'
      - name: Run tests
        run: make test
      - name: Login to dockerhub
        run: echo "${{ secrets.DockerHubToken }}" | docker login --username ${DOCKER_USER} --password-stdin
        env:
          DOCKER_USER: ${{ secrets.DockerHubUser }}
      - name: Publish Docker Image
        run: make publish
        env:
          VERSION: ${{ github.event.inputs.tag }}
      - name: run make bump-version
        run: make bump-version
        env:
          NEW_VERSION: ${{ github.event.inputs.tag }}
      - name: commit manifests
        uses: EndBug/add-and-commit@1bad3abcf0d6ec49a5857d124b0bfb52dc7bb081
        with:
          message: "update the VERSION file with ${{ github.event.inputs.tag }}"
          add: "VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: find target commit to tag
        run: |
          sha=$(git rev-parse HEAD)
          echo "TARGET_SHA=$sha" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ env.TARGET_SHA }}
          tag_name: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.tag }}